/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connector.ServerConnector;
import controller.CustomerController;
import controller.FridgeController;
import controller.IdController;
import controller.LocationController;
import java.awt.Color;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import model.Customer;
import model.Fridge;
import static view.MainFrame.desktopPane;

/**
 *
 * @author supun
 */
public class SecondSampleStorageForm extends javax.swing.JInternalFrame {

    JLabel jLabel;
    static String nic;
    private int parseInt = 0;

    /**
     * Creates new form AddCustomerDetails
     */
    public SecondSampleStorageForm() {

        try {
            initComponents();

            for (int i = 0; i < 99; i++) {

                fridgeComboBox.addItem("REF" + (i + 1));
            }

           

            storeButton.setEnabled(false);
            Calendar calendar = Calendar.getInstance();
            int year = calendar.get(Calendar.YEAR);
            int month = calendar.get(Calendar.MONTH) + 1;
            int days = calendar.get(Calendar.DAY_OF_MONTH);
            storageDateTextField.setText((year + "-" + month + "-" + days));

            IdController idController = ServerConnector.getServerConnector().getIdController();
            String nextSid = idController.getNextSid();
            parseInt = Integer.parseInt(nextSid) + 1;
        } catch (SQLException ex) {
            Logger.getLogger(SecondSampleStorageForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SecondSampleStorageForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(SecondSampleStorageForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(SecondSampleStorageForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(SecondSampleStorageForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        sampleIDTextField = new javax.swing.JTextField();
        cscIDTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        storeButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        locationComboBox = new javax.swing.JComboBox();
        fridgeComboBox = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        placeTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        custIDTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        storageDateTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        locationIdentiTextField = new javax.swing.JTextField();
        alocatedPlaceTextField = new javax.swing.JLabel();
        idButton = new javax.swing.JButton();

        setBackground(java.awt.Color.white);

        jPanel1.setBackground(java.awt.Color.white);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        sampleIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleIDTextFieldActionPerformed(evt);
            }
        });

        cscIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cscIDTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Location");

        storeButton.setText("Next");
        storeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("CSC ID");

        jLabel4.setText("Sample number of CSC");

        jLabel1.setBackground(java.awt.Color.white);
        jLabel1.setFont(new java.awt.Font("Droid Serif", 0, 36)); // NOI18N
        jLabel1.setText("         Second Sample Storage Form");

        jLabel8.setText("Fridge Number");

        locationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Perth", "Colombo", "Tokyo", "Beijing", "Bangkok ", "New Delhi" }));
        locationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationComboBoxActionPerformed(evt);
            }
        });

        fridgeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fridgeComboBoxActionPerformed(evt);
            }
        });

        jLabel19.setText("Alocated place in CSC");

        placeTextField.setForeground(new java.awt.Color(255, 0, 0));
        placeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("Customer ID");

        custIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custIDTextFieldActionPerformed(evt);
            }
        });

        jLabel7.setText("Storage Date");

        storageDateTextField.setEditable(false);
        storageDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storageDateTextFieldActionPerformed(evt);
            }
        });

        jLabel9.setText("Location Identifier");

        locationIdentiTextField.setEditable(false);
        locationIdentiTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationIdentiTextFieldActionPerformed(evt);
            }
        });

        idButton.setText("Genarate");
        idButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(locationComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 158, Short.MAX_VALUE)
                                    .addComponent(custIDTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fridgeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(placeTextField, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(101, 101, 101)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(alocatedPlaceTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(locationIdentiTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                    .addComponent(storageDateTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cscIDTextField)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(25, 25, 25)
                                .addComponent(sampleIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(idButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(storeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(custIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(storageDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationIdentiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fridgeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cscIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(placeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alocatedPlaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sampleIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idButton))
                .addGap(169, 169, 169)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(storeButton)
                    .addComponent(jButton2))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cscIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cscIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cscIDTextFieldActionPerformed

    private void sampleIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sampleIDTextFieldActionPerformed

    private void storeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeButtonActionPerformed

        try {
            System.out.println(locationComboBox.getSelectedItem().toString());
            FridgeController fridgeController = ServerConnector.getServerConnector().getFridgeController();
            Fridge fridge = new Fridge(custIDTextField.getText(), sampleIDTextField.getText(), cscIDTextField.getText(), storageDateTextField.getText(), locationComboBox.getSelectedItem().toString(), fridgeComboBox.getSelectedItem().toString(), cscIDTextField.getText(), placeTextField.getText());

            int addFridge = fridgeController.addFridge(fridge);
            if (addFridge > 0) {

                JOptionPane.showMessageDialog(this, "Added Successfully");
                IdController idController = ServerConnector.getServerConnector().getIdController();
                idController.removeSid(Integer.toString(parseInt));

                
            } else {
                JOptionPane.showMessageDialog(this, " Added Faild");
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_storeButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//     
    }//GEN-LAST:event_jButton2ActionPerformed

    private void placeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_placeTextFieldActionPerformed

    private void custIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custIDTextFieldActionPerformed

    private void fridgeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fridgeComboBoxActionPerformed

//        try {
//            String name = (String) locationComboBox.getSelectedItem();
//            String refno = (String) fridgeComboBox.getSelectedItem();
//            //idText.setText("");
//            cscIDTextField.setText("CSC" + (fridgeComboBox.getSelectedIndex() + 1));
//            FridgeController fridgeController = ServerConnector.getServerConnector().getFridgeController();
//            int searchRef = fridgeController.searchRef(name, cscIDTextField.getText());
//            if (searchRef >= 16) {
//                alocatedPlaceTextField.setText("NO Space Available");
//                placeTextField.setText("");
//                idButton.setEnabled(false);
//                // storaSaveButton.setEnabled(false);
//            } else {
//                alocatedPlaceTextField.setText("Space Available");
//                placeTextField.setText(cscIDTextField.getText() + "-" + (searchRef + 1));
//                idButton.setEnabled(true);
//                //storaSaveButton.setEnabled(true);
//            }
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (NotBoundException ex) {
//            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (MalformedURLException ex) {
//            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (RemoteException ex) {
//            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
//        }
        try {
            String name = (String) locationComboBox.getSelectedItem();
            String refno = (String) fridgeComboBox.getSelectedItem();
            sampleIDTextField.setText("");
            cscIDTextField.setText("CSC" + (fridgeComboBox.getSelectedIndex() + 1));
            FridgeController storageController = ServerConnector.getServerConnector().getFridgeController();
            int i;
            boolean b = false;
            for (i = 1; i <= 16; i++) {
                int searchRef = storageController.searchRef(name, cscIDTextField.getText() + "-" + i);
                if (searchRef > 0) {
                    b = true;
                } else {
                    b = false;
                    break;
                }
            }

            if (b == true) {
                alocatedPlaceTextField.setText("NO Space Available");
                placeTextField.setText("");
                idButton.setEnabled(false);
                storeButton.setEnabled(false);
            } else {
                alocatedPlaceTextField.setText("Space Available");
                placeTextField.setText(cscIDTextField.getText() + "-" + (i));
                idButton.setEnabled(true);
                //storaSaveButton.setEnabled(true);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_fridgeComboBoxActionPerformed

    private void locationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationComboBoxActionPerformed

//        try {
//            String name = (String) locationComboBox.getSelectedItem();
//            LocationController locationController = ServerConnector.getServerConnector().getLocationController();
//            locationIdentiTextField.setText(locationController.getLocationIdentifier(name));
//            System.out.println((locationController.getLocationIdentifier(name)));
//        } catch (SQLException ex) {
//            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (NotBoundException ex) {
//            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (MalformedURLException ex) {
//            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (RemoteException ex) {
//            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
//        }
        try {
            String name = (String) locationComboBox.getSelectedItem();
            LocationController locationController = ServerConnector.getServerConnector().getLocationController();
            locationIdentiTextField.setText(locationController.getLocationIdentifier(name));

            try {
                //String name=(String)locationCombo.getSelectedItem();
                String refno = (String) fridgeComboBox.getSelectedItem();
                sampleIDTextField.setText("");
                cscIDTextField.setText("CSC" + (fridgeComboBox.getSelectedIndex() + 1));
                FridgeController storageController = ServerConnector.getServerConnector().getFridgeController();
                int i;
                boolean b = false;
                for (i = 1; i <= 16; i++) {
                    int searchRef = storageController.searchRef(name, cscIDTextField.getText() + "-" + i);
                    if (searchRef > 0) {
                        b = true;
                    } else {
                        b = false;
                        break;
                    }
                }

                if (b == true) {
                    alocatedPlaceTextField.setText("NO Space Available");
                    placeTextField.setText("");
                    idButton.setEnabled(false);
                    storeButton.setEnabled(false);
                } else {
                    alocatedPlaceTextField.setText("Space Available");
                    placeTextField.setText(cscIDTextField.getText() + "-" + (i));
                    idButton.setEnabled(true);
                    //storaSaveButton.setEnabled(true);
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NotBoundException ex) {
                Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (RemoteException ex) {
                Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(CollectionPointForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_locationComboBoxActionPerformed

    private void storageDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storageDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_storageDateTextFieldActionPerformed

    private void locationIdentiTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationIdentiTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationIdentiTextFieldActionPerformed

    private void idButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idButtonActionPerformed

        Calendar calendar = Calendar.getInstance();
        String date = calendar.get(Calendar.YEAR) + "" + (calendar.get(Calendar.MONTH) + 1) + "" + calendar.get(Calendar.DAY_OF_MONTH);
        String id = "SeS" + parseInt + "-" + date + "-" + locationIdentiTextField.getText() + "-" + (String) fridgeComboBox.getSelectedItem() + "-" + placeTextField.getText();
        sampleIDTextField.setText(id);
        storeButton.setEnabled(true);


    }//GEN-LAST:event_idButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alocatedPlaceTextField;
    private javax.swing.JTextField cscIDTextField;
    private javax.swing.JTextField custIDTextField;
    private javax.swing.JComboBox fridgeComboBox;
    private javax.swing.JButton idButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox locationComboBox;
    private javax.swing.JTextField locationIdentiTextField;
    private javax.swing.JTextField placeTextField;
    public static javax.swing.JTextField sampleIDTextField;
    private javax.swing.JTextField storageDateTextField;
    private javax.swing.JButton storeButton;
    // End of variables declaration//GEN-END:variables

}
