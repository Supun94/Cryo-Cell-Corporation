/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connector.ServerConnector;
import controller.CustomerController;
import controller.IdController;
import java.awt.Color;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import model.Customer;
import static view.AddCustomerDetails.nicTextField;

/**
 *
 * @author supun-pc
 */
public class AddNewCustomerForm extends javax.swing.JDialog {
 JLabel jLabel;
    static String nic;
    static int x=0;
    String newId="";
    /**
     * Creates new form AddNewCustomerForm
     */
    public AddNewCustomerForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
     try {
         initComponents();
         setLocationRelativeTo(null);
         
         IdController idController = ServerConnector.getServerConnector().getIdController();
         custIDTextField.setText(idController.getNextCustID());
     } catch (SQLException ex) {
         Logger.getLogger(AddNewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
     } catch (ClassNotFoundException ex) {
         Logger.getLogger(AddNewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
     } catch (RemoteException ex) {
         Logger.getLogger(AddNewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
     } catch (NotBoundException ex) {
         Logger.getLogger(AddNewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
     } catch (MalformedURLException ex) {
         Logger.getLogger(AddNewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
     }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        nicTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        firstNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextArea();
        femaleRadioButton = new javax.swing.JRadioButton();
        contTextField = new javax.swing.JTextField();
        maleRadioButton = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        custIDTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(java.awt.Color.white);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Address");

        nicTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nicTextFieldActionPerformed(evt);
            }
        });
        nicTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nicTextFieldKeyReleased(evt);
            }
        });

        lastNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameTextFieldActionPerformed(evt);
            }
        });

        firstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("NIC");

        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("First Name");

        jLabel10.setText("Contact No");

        jLabel5.setText("Date Of Birth");

        addressTextArea.setColumns(20);
        addressTextArea.setRows(5);
        jScrollPane1.setViewportView(addressTextArea);

        femaleRadioButton.setText("female");
        femaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleRadioButtonActionPerformed(evt);
            }
        });

        contTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contTextFieldActionPerformed(evt);
            }
        });

        maleRadioButton.setText("male");

        jLabel4.setText("Last Name");

        jLabel7.setText("Gender");

        jLabel1.setBackground(java.awt.Color.white);
        jLabel1.setFont(new java.awt.Font("Droid Serif", 0, 36)); // NOI18N
        jLabel1.setText("Customer Registration Form");

        jLabel11.setText("Email");

        emailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextFieldActionPerformed(evt);
            }
        });

        jLabel8.setText("Customer ID");

        custIDTextField.setEditable(false);
        custIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custIDTextFieldActionPerformed(evt);
            }
        });
        custIDTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                custIDTextFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(contTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(maleRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(femaleRadioButton)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(custIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(nicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(custIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maleRadioButton)
                    .addComponent(femaleRadioButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //        buuff im=webcam.getImage();
        //        ImageIO.write(im, title, jpg);
        //        ImageIcon ic=new ImageIcon("c;;");
        //        jLabel.setIcon(frameIcon);
        //        panel.removeAll();
        //        panel.add();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void nicTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nicTextFieldActionPerformed
        // System.out.println("XCXCC"+x);
//        if(x==0){
//            System.out.println("XCXCC"+x);
//            try {
//                IdController idController = ServerConnector.getServerConnector().getIdController();
//                custIDTextField.setText(idController.getNextCustID());
//                newId=custIDTextField.getText();
//                ++x;
//            } catch (NotBoundException ex) {
//                Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (MalformedURLException ex) {
//                Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (RemoteException ex) {
//                Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (SQLException ex) {
//                Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (ClassNotFoundException ex) {
//                Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }else{
            //try {
                //IdController idController = ServerConnector.getServerConnector().getIdController();
//                custIDTextField.setText(newId);
//                ++x;
                //} catch (NotBoundException ex) {
                //        Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
                //    } catch (MalformedURLException ex) {
                //        Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
                //    } catch (RemoteException ex) {
                //        Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
                //    }
    //    }
        //        try {
            //            Customer customer = CustomerController.searchCustomer(nicTextField.getText());
            //                addressTextArea.setText(customer.getLastName());
            //
            //            if (customer != null) {
                //
                //                firstNameTextField.setText(customer.getFirstName());
                //                lastNameTextField.setText(customer.getLastName());
                //                contTextField.setText(customer.getLastName());
                //                addressTextArea.setText(customer.getLastName());
                //            } else {
                //                genarateBirthday();
                //            }
            //        } catch (SQLException | ClassNotFoundException ex) {
            //            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
            //        }
    }//GEN-LAST:event_nicTextFieldActionPerformed

    private void nicTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicTextFieldKeyReleased
        String txt = nicTextField.getText();
        int caretPosition = nicTextField.getCaretPosition();
        if (txt.matches("^[0-9]{9}[vVxX]$")) {
            nicTextField.setBackground(Color.WHITE);
            genarateBirthday();

            // try {
                //                IdController idController = ServerConnector.getServerConnector().getIdController();
                //                custIDTextField.setText(idController.getNextCustID());
                //            } catch (NotBoundException ex) {
                //                Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
                //            } catch (MalformedURLException ex) {
                //                Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
                //            } catch (RemoteException ex) {
                //                Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
                //            } catch (SQLException ex) {
                //                Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
                //            } catch (ClassNotFoundException ex) {
                //                Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
                //            }

        } else {
            nicTextField.setBackground(Color.GREEN);
            if (txt.matches("^[a-zA-Z0-9]{10}[a-zA-Z0-9]$")) {
                nicTextField.setBackground(Color.RED);
                nicTextField.setText(txt.substring(0, caretPosition - 1) + txt.substring(caretPosition));
                nicTextField.setCaretPosition(caretPosition - 1);
            }
        }
    }//GEN-LAST:event_nicTextFieldKeyReleased

    private void lastNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameTextFieldActionPerformed

    private void firstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            //        try {
                //            CustomerController customerController=ServerConnector.getServerConnector().getCustomerController();
                //
                //            Customer customer = new Customer(nicTextField.getText(), firstNameTextField.getText(), lastNameTextField.getText(), dateChooser.getDate(), addressTextArea.getText(), contTextField.getText(),emailTextField.getText(),maleRadioButton.isSelected() ? "male" :"female");
                //
                //            int res = customerController.addCustomer(customer);
                //            if (res > 0) {
                    //                //AddPolicy.nic1TextField.setText(nicTextField.getText());
                    //                JOptionPane.showMessageDialog(rootPane, "Added");
                    //
                    ////                nic=nicTextField.getText();
                    ////                MainFrame.desktopPane.removeAll();
                    ////                MainFrame.desktopPane.repaint();
                    ////                AddPolicy addPolicy = new AddPolicy();
                    ////                addPolicy.setSize(MainFrame.desktopPane.getSize());
                    ////                MainFrame.desktopPane.add(addPolicy);
                    ////                addPolicy.setVisible(true);
                    //
                    //            } else {
                    //                JOptionPane.showMessageDialog(rootPane, "Faild");
                    //            }
                //        } catch (NotBoundException ex) {
                //            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
                //        } catch (MalformedURLException ex) {
                //            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
                //        } catch (RemoteException ex) {
                //            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
                //        }

            CustomerController customerController = ServerConnector.getServerConnector().getCustomerController();
            Customer customer = new Customer(custIDTextField.getText(), nicTextField.getText(), firstNameTextField.getText(), lastNameTextField.getText(), dateChooser.getDate(), addressTextArea.getText(), contTextField.getText(), emailTextField.getText(), maleRadioButton.isSelected() ? "male" : "female");

            int addCustomer = customerController.addCustomer(customer);
            if (addCustomer > 0) {

                JOptionPane.showMessageDialog(this, "Customer Added Successfully");
                IdController idController = ServerConnector.getServerConnector().getIdController();
                idController.removeCustID(custIDTextField.getText());
            } else {
                JOptionPane.showMessageDialog(this, "Customer not Added");
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddCustomerDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void femaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleRadioButtonActionPerformed

    private void contTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contTextFieldActionPerformed

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void custIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custIDTextFieldActionPerformed

    private void custIDTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custIDTextFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_custIDTextFieldKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       try {
            try {
                IdController idController = ServerConnector.getServerConnector().getIdController();
                idController.releaseCustID(custIDTextField.getText());
            } catch (SQLException ex) {
                Logger.getLogger(AddNewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddNewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NotBoundException ex) {
                Logger.getLogger(AddNewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(AddNewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(AddNewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddNewCustomerForm dialog = new AddNewCustomerForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea addressTextArea;
    private javax.swing.JTextField contTextField;
    public static javax.swing.JTextField custIDTextField;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JTextField emailTextField;
    public javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameTextField;
    public javax.swing.JRadioButton maleRadioButton;
    public static javax.swing.JTextField nicTextField;
    // End of variables declaration//GEN-END:variables


    public void genarateBirthday() {

        String nic = nicTextField.getText();
        String syy = nic.substring(0, 2);
        String smm = nic.substring(2, 5);
        syy = "19" + syy;
        int iyy = Integer.parseInt(syy);
        int imm = Integer.parseInt(smm);

        String gender;
        if (imm > 500) {
            femaleRadioButton.setSelected(true);
        } else {
            maleRadioButton.setSelected(true);
        }

        if (iyy % 4 != 0) {
            imm -= 1;
        }

        Calendar c1 = Calendar.getInstance();
        c1.set(Calendar.YEAR, iyy);
        c1.set(Calendar.DAY_OF_YEAR, imm);

        Date d = c1.getTime();
        DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);
        String dob = df.format(d);
        String a = dob.split("/")[0];
        String b = dob.split("/")[1];
        String c = dob.split("/")[2];
        int x = Integer.parseInt(b);
        if (x < 10) {
            String n = "0" + x;
            dateChooser.setDate(d);
        } else {
            dateChooser.setDate(d);
        }
    }

}
