package view;

import connector.ServerConnector;
import controller.CustomerController;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.Customer;

public class ViewAllCustomer extends javax.swing.JInternalFrame {

    static String updateClient;
    JTabbedPane jTabbedPane;

    private static JTextField didcomboText;
    private static String[] didcomboList;

    public ViewAllCustomer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        updateButton = new javax.swing.JButton();
        ClientComboBox = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        printButton = new javax.swing.JButton();
        refereshButton = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();
        viewAllButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        nicCust = new javax.swing.JLabel();
        lastNameCust = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        addressCust = new javax.swing.JLabel();
        firstNameCust = new javax.swing.JLabel();
        dobCust = new javax.swing.JLabel();
        nic1TextField = new javax.swing.JTextField();
        updateCust = new javax.swing.JButton();
        cancelCust = new javax.swing.JButton();
        contCust = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        addressTextField = new javax.swing.JTextField();
        contactTextField = new javax.swing.JTextField();
        dobTextField = new com.toedter.calendar.JDateChooser();
        manageCustomerForm = new javax.swing.JLabel();

        jPanel1.setBackground(java.awt.Color.white);

        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CustomerID", "NIC", "LastName", "FirstName", "Dob", "Address", "ContactNo", "Email", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(clientTable);

        updateButton.setBackground(new java.awt.Color(153, 204, 255));
        updateButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        ClientComboBox.setEditable(true);
        ClientComboBox.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ClientComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientComboBoxActionPerformed(evt);
            }
        });
        ClientComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ClientComboBoxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ClientComboBoxKeyReleased(evt);
            }
        });

        searchButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        printButton.setBackground(new java.awt.Color(153, 204, 255));
        printButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        refereshButton.setBackground(new java.awt.Color(153, 204, 255));
        refereshButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        refereshButton.setText("Refresh");
        refereshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refereshButtonActionPerformed(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel.setText("NIC");

        viewAllButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAllButton.setText("View All Customers");
        viewAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ClientComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(31, 31, 31))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 125, Short.MAX_VALUE)
                        .addComponent(refereshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(viewAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(170, 170, 170))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ClientComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchButton))
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewAllButton)
                    .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refereshButton)
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );

        viewTabbedPane.addTab("View Customer Details", jPanel1);

        jPanel2.setBackground(java.awt.Color.white);

        nicCust.setText("NIC");

        lastNameCust.setText("LastName");

        lastNameTextField.setEditable(false);

        addressCust.setText("Address");

        firstNameCust.setText("Firt Name");

        dobCust.setText("DOB");

        nic1TextField.setEditable(false);

        updateCust.setText("Update");
        updateCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCustActionPerformed(evt);
            }
        });

        cancelCust.setText("Cancel");
        cancelCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelCustActionPerformed(evt);
            }
        });

        contCust.setText("ContactNo");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(firstNameCust, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(nicCust, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nic1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(contCust, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(contactTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(addressCust, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(addressTextField))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(dobCust, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dobTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lastNameCust, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(updateCust, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelCust, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(88, 88, 88))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nicCust, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nic1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameCust, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameCust, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dobCust, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressCust, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contCust, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateCust)
                    .addComponent(cancelCust))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        viewTabbedPane.addTab("Update Customer Details", jPanel2);

        manageCustomerForm.setBackground(java.awt.Color.white);
        manageCustomerForm.setFont(new java.awt.Font("Droid Serif", 0, 36)); // NOI18N
        manageCustomerForm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        manageCustomerForm.setText("Manage Customer Form");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(viewTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(manageCustomerForm)
                        .addGap(265, 265, 265))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addComponent(manageCustomerForm)
                .addGap(18, 18, 18)
                .addComponent(viewTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
//        int rowcount = clientTable.getSelectedRowCount();
//        if (rowcount == 1) {
//            try {
//                int row = clientTable.getSelectedRow();
//                updateClient = (String) clientTable.getValueAt(row, 0);
//                
//                viewTabbedPane.setSelectedIndex(1);
//                updateClientForm();
//                
//            } catch (ClassNotFoundException | SQLException ex) {
//                Logger.getLogger(ViewAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        } else if (rowcount == 0) {
//            JOptionPane.showMessageDialog(this, "Please select a Client First");
//        } else {
//            JOptionPane.showMessageDialog(this, "Please select only one Client");
//
//        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void ClientComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientComboBoxActionPerformed

    }//GEN-LAST:event_ClientComboBoxActionPerformed

    private void ClientComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClientComboBoxKeyPressed

    }//GEN-LAST:event_ClientComboBoxKeyPressed

    private void ClientComboBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClientComboBoxKeyReleased

    }//GEN-LAST:event_ClientComboBoxKeyReleased

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String clientName = (String) ClientComboBox.getSelectedItem();

        String CID = (String) ClientComboBox.getSelectedItem();
        DefaultTableModel tableModel = (DefaultTableModel) clientTable.getModel();
        Customer[] detailArray;

        try {
            CustomerController customerController = ServerConnector.getServerConnector().getCustomerController();
            detailArray = customerController.getNameDetails(clientName);
            tableModel.setRowCount(0);
            for (Customer customerDetail : detailArray) {

                Object rows[] = {customerDetail.getCustID(), customerDetail.getNic(), customerDetail.getFirstName(), customerDetail.getLastName(), customerDetail.getDob(), customerDetail.getAddress(), customerDetail.getContactNo(), customerDetail.getEmail(), customerDetail.getGender()};
                tableModel.addRow(rows);
            }
        } catch (ClassNotFoundException | SQLException | RemoteException | NotBoundException | MalformedURLException ex) {
            Logger.getLogger(ViewAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            CustomerController customerController = ServerConnector.getServerConnector().getCustomerController();
            detailArray = customerController.getCIDDetails(clientName);
            tableModel.setRowCount(0);
            for (Customer customerDetail : detailArray) {

                Object rows[] = {customerDetail.getCustID(), customerDetail.getNic(), customerDetail.getFirstName(), customerDetail.getLastName(), customerDetail.getDob(), customerDetail.getAddress(), customerDetail.getContactNo(), customerDetail.getEmail(), customerDetail.getGender()};
                tableModel.addRow(rows);
            }
        } catch (ClassNotFoundException | SQLException | RemoteException | NotBoundException | MalformedURLException ex) {
            Logger.getLogger(ViewAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed

    }//GEN-LAST:event_printButtonActionPerformed

    private void refereshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refereshButtonActionPerformed

    }//GEN-LAST:event_refereshButtonActionPerformed

    private void viewAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllButtonActionPerformed
        try {
            DefaultTableModel tableModel = (DefaultTableModel) clientTable.getModel();

            CustomerController customerController = ServerConnector.getServerConnector().getCustomerController();
            Customer[] array = customerController.showCustomer();
            tableModel.setRowCount(0);
            for (Customer customerDetail : array) {
                Object row[] = {customerDetail.getCustID(), customerDetail.getNic(), customerDetail.getFirstName(), customerDetail.getLastName(), customerDetail.getDob(), customerDetail.getAddress(), customerDetail.getContactNo(), customerDetail.getEmail(), customerDetail.getGender()};
                tableModel.addRow(row);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ViewAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ViewAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ViewAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_viewAllButtonActionPerformed

    private void updateCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCustActionPerformed
//        try {
// 
//            Customer customer = new Customer(custIDnic1TextField.getText(), firstNameTextField.getText(), lastNameTextField.getText(), dobTextField.getDate(), addressTextField.getText(), contactTextField.getText());
//
//            int res = CustomerController.updateCusotmer(customer);
//            if (res > 0) {
//                JOptionPane.showMessageDialog(rootPane, "Added");
//                lastNameTextField.setText("");
//
//            } else {
//                JOptionPane.showMessageDialog(rootPane, "Failed");
//            }
//        } catch (SQLException | ClassNotFoundException ex) {
//            Logger.getLogger(AddPolicy.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_updateCustActionPerformed

    private void cancelCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelCustActionPerformed

//        MainFrame.policyButton.doClick();
    }//GEN-LAST:event_cancelCustActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JComboBox ClientComboBox;
    private javax.swing.JLabel addressCust;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JButton cancelCust;
    private javax.swing.JTable clientTable;
    private javax.swing.JLabel contCust;
    private javax.swing.JTextField contactTextField;
    private javax.swing.JLabel dobCust;
    private com.toedter.calendar.JDateChooser dobTextField;
    private javax.swing.JLabel firstNameCust;
    public static javax.swing.JTextField firstNameTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastNameCust;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel manageCustomerForm;
    private javax.swing.JLabel nameLabel;
    public static javax.swing.JTextField nic1TextField;
    private javax.swing.JLabel nicCust;
    private javax.swing.JButton printButton;
    private javax.swing.JButton refereshButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton updateCust;
    private javax.swing.JButton viewAllButton;
    private javax.swing.JTabbedPane viewTabbedPane;
    // End of variables declaration//GEN-END:variables

//    public void updateClientForm() throws ClassNotFoundException, SQLException {
//        Customer[] customerArray = null;
//        customerArray = CustomerController.getCIDDetails(ViewAllCustomer.updateClient);
//        for (Customer customer : customerArray) {
//            nic1TextField.setText(customer.getNic());
//            firstNameTextField.setText(customer.getFirstName());
//            lastNameTextField.setText(customer.getLastName());
//            dobTextField.setDate(customer.getDob());
//            addressTextField.setText(customer.getAddress());
//            contactTextField.setText(customer.getContactNo());
//        }
//
//    }
    public void fillNic() throws SQLException, ClassNotFoundException {
        try {
            CustomerController customerController = ServerConnector.getServerConnector().getCustomerController();

            Customer[] customerList = customerController.showCustomer();
            ClientComboBox.removeAllItems();
            for (Customer customer : customerList) {
                ClientComboBox.addItem(customer.getNic());

            }

            didcomboText = (JTextField) ClientComboBox.getEditor().getEditorComponent();
            didcomboList = new String[ClientComboBox.getItemCount()];
            for (int i = 0; i < didcomboList.length; i++) {
                didcomboList[i] = (String) ClientComboBox.getItemAt(i);
            }

            didcomboText.addKeyListener(new KeyAdapter() {
                @Override
                public void keyReleased(KeyEvent evt) {
                    String txt = didcomboText.getText();
                    ClientComboBox.removeAllItems();
                    ClientComboBox.hidePopup();

                    for (int i = 0; i < didcomboList.length; i++) {
                        if (didcomboList[i].toUpperCase().contains(txt.toUpperCase())) {
                            ClientComboBox.addItem(didcomboList[i]);
                        }
                    }
                    didcomboText.setText(txt);
                    ClientComboBox.showPopup();
                }
            });
        } catch (RemoteException ex) {
            Logger.getLogger(ViewAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(ViewAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ViewAllCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    public void setMessage(String message){
    manageCustomerForm.setText(message);
    }

}
